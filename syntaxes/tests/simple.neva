// comments

use {
    std/tmp/io
	stdpkg
	imported/from/elsewhereas
	with_alias another/imported/from/elsewhere
}

types {
    MyErr error
    MyFloat float
    MyBool bool
    pub MyStr str
    MyVec<T> []T
    MyArr<T int> [512]int
    MyArr<T MyVec<int>> [512]T
    MyArr<T MyVec<int>> [512][]int
    MyUnion MyFloat | MyVec | MyArr | MyRec | MyEnum
    MyArr<T MyVec<int>> [512][]int
}

interfaces {
    IMyInterface<T bool>(y notStorage, x int) (z T)
    pub IMyInterface2<T MyUnion>(x int) (z T)
    IMyInterface3<T bool>(y notStorage, x int) (z T)
}

const {
    myTrue bool true
    pi myFloat 3.14
    pub my_vec MyVec<myFloat> [pi, pi]
    zero any nil
    my_str str "my string"
}

components {
    pub Doer<T float>(x int) (z T) {
        nodes {
            abstractNode IMyInterface()
            printer std_pkg.Printer()
            reader elsewhere.Reader<str>()
        }
        net {
            in.x -> printer.v
            printer.v -> {
                reader.v
                out.z
            }
        }
    }
}


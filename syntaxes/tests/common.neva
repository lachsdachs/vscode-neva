// comments

use {
	std_pkg
	imported/from/elsewhere
	with_alias another/imported/from/elsewhere
}

types {
    MyErr error
    MyCmplx c128 | c64
    MyFloat f32
    MyBool bool
    MyStr str
    MyVec<T> []T
    MyArr<T> [512]T
    MyRec<T> {
        foo i32
        bar str
        baz MyArr<T>
    }
    MyEnum {
        First
        Second
    }
    MyUnion MyFloat | MyVec | MyArr | MyRec | MyEnum
}

interfaces {
    IMyInterface<T MyUnion>(x, y int) (z T)
    pub IMyInterface2<T MyUnion>(x, y int) (z T)
}

const {
    true true
    pi myFloat 3.14
    my_vec MyVec<myFloat> [pi, pi]
    pub my_friend MyRec<f32> {
        foo: 27
        bar: "john"
        baz: 42.0
    }
    my_str "my string"
}

components {
    pub Doer<T f64>(x u32) (z T) {
        nodes {
            abstractNode IMyInterface
            printer std_pkg.Printer
            reader elsewhere.Reader<str>
        }
        net {
            in.x -> printer.in.v
            printer.out.v -> {
                reader.in.v
                out.z
            }
        }
    }

    Doer2<T f64>(x u32) (z T) {
        nodes {
            abstractNode IMyInterface
            printer std_pkg.Printer
            reader elsewhere.Reader<str>
        }
        net {
            in.x -> printer.in.v
            printer.out.v -> {
                reader.in.v
                out.z
            }
        }
    }
}

